reticulate::repl_python()
import numpy as np
import pandas as pd
import yfinance as yf
BTC=yf.download(tickers="BTC-USD", start="2017-01-01",interval="1mo")
BTC
BTC.tail()
import matplotlib
from matplotlib.pyplot import*
plot(BTC["Adj Close"])
show()
BTC.info()
BTC["R"] = (BTC["Adj Close"] / BTC["Adj Close"].shift(1)) - 1
print(BTC["R"])
BTC["r"] = np.log(BTC['Adj Close']) - np.log(BTC['Adj Close'].shift(1))
BTC["r2"] = np.log(BTC['Adj Close'].diff(1))
BTCR = BTC[['R','r']].copy()
BTC["r2"] = np.log(BTC['Adj Close']).diff(1)
View(BTC)
BTC.tail()
BTC.head()
BTC.tail()
sumret = BTC["R"].describe()
sumret
type(sumret)
sumret['min']
sumret.min
sumret2 = 100* sumret
type(BTCR)
reticulate:: repl_python()
!pip install symbulate
from symbulate import *
#'exec(%matplotlib inline)'
import matplotlib
import matplotlib.pyplot as plt
# clear the plot space:
plt.clf()
# Define the probability type of function as uniform (probability space)
P = Uniform(0,40)
# Define X as a random variable of the type P (uniform)
X =RV(P)
# Simulate the values of X and save the in the x array:
x=X.sim(10000)
x.plot()
plt.show()
